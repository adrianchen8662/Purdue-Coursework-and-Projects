The following program submission has been recorded:

Student: chen3124
Class: CS159
Section: 13322
Assignment: lab01.c
Submission: 2020-01-26 15:07

If the above is incorrect, you are responsible for resubmitting the assignment or seeking assistance from a course staff member prior to the due date! Assignments will never be accepted by e-mail.

If this is for a lab assignment, only one member must be designated to make a submission for the group.  Graders will not evaluate submissions from multiple group members to determine which effort you actually want graded.

*** Please do not reply to this email ***

The contents of the submission:
     1	
     2	/***************************************************************************
     3	*
     4	*  Programmers and Purdue Email Addresses:
     5	*  1. chen3124@purdue.edu
     6	*  2. chu171@purdue.edu
     7	*  3. cfrielin@purdue.edu
     8	*
     9	*  Lab #: 1
    10	*
    11	*  Academic Integrity Statement:
    12	*
    13	*  We have not used source code obtained from any other unauthorized source,
    14	*  either modified or unmodified.  Neither have we provided access to our code
    15	*  to another. The effort we are submitting is our own original work.
    16	*
    17	*  Day, Time, Location of Lab: Tue, 9:30 AM, SC 189
    18	*
    19	*  Program Description: Finds the perpendicular bisector from two ordered pairs
    20	*
    21	***************************************************************************/
    22	
    23	#include<stdio.h>
    24	
    25	int main()
    26	{
    27	  //variable declaration
    28	  float x1 = 0; //ordered pair 1, x variable
    29	  float y1 = 0; //ordered pair 1, y variable
    30	  float x2 = 0; //ordered pair 2, x variable
    31	  float y2 = 0; //ordered pair 2, y variable
    32	  float midpointx = 0; //midpoint, x variable
    33	  float midpointy = 0; //midpoint, y variable
    34	  float slope = 0; //slope
    35	  float yintercept = 0; //y-interecpt of equation
    36	
    37	  //asks and scans for four variables for two ordered pairs
    38	  printf("Enter the first x coordinate -> ");
    39	  scanf("%f",&x1);
    40	  printf("Enter the first y coordinate -> ");
    41	  scanf("%f",&y1);
    42	  printf("Enter the second x coordinate -> ");
    43	  scanf("%f",&x2);
    44	  printf("Enter the second y coordinate -> ");
    45	  scanf("%f",&y2);
    46	  
    47	  //prints the two ordered pairs, formatted to one decimal space
    48	  printf("Original endpoints: [%.1f, %.1f] and [%.1f, %.1f]", x1, y1, x2, y2);
    49	  
    50	  //finds the midpoint, slope and y-intercept
    51	  midpointx = (x1 + x2) / 2;
    52	  midpointy = (y1 + y2) / 2;
    53	  slope = (y2 - y1) / (x2 - x1);
    54	  slope = -1 / slope; //creates the negative inverse of the parallel slope
    55	  yintercept = midpointy - slope * midpointx;
    56	
    57	  //prints out the equation of the perpendicular bisector in y-intercept form, formatted to two decimal spaces
    58	  printf("\nEquation of the perpendicular bisector: y = %.2fx + %.2f\n", slope, yintercept);
    59	 
    60	  return(0);
    61	
    62	}
